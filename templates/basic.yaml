openapi: 3.0.0
info:
  version: 1.0.0
  title: {{Resource}} list
  description: >-
   This is an OpenAPI Specification created by oas-wizard (https://github.com/pafmon/oas-wizard)  
  contact:
    name: PabloFM
    email: pablofm@us.es
    url: http://www.isa.us.es
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
paths:
  /api/v1/{{resources}}:
    get:
      description: Returns all {{resources}} 
      operationId: get{{Resources}}
      responses:
        '200':
          description: {{Resource}} List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/{{resource}}'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    post:
      description: Creates a new {{resource}}
      operationId: add{{Resource}}
      responses:
        '201':
          description: {{resource}} created
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
      requestBody:
        x-name: {{resource}}
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/{{resource}}'
        description: {{Resource}} to be created
        required: true
  /api/v1/{{resources}}/_#{#_{{resourceId}}_#}#_:
    get:
      description: >-
        Returns a {{resource}} by {{resourceId}}
      operationId: find{{Resource}}By{{resourceId}}
      parameters:
        - name: {{resourceId}}
          in: path
          description: {{resourceId}} of {{resource}} to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: {{Resource}} returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/{{resource}}'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    delete:
      description: deletes a single {{resource}} based on the {{resourceId}}
      operationId: delete{{Resource}}
      parameters:
        - name: {{resourceId}}
          in: path
          description: ID of {{resource}} to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: {{resource}} deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    put:
      description: Update a {{resource}} based on its {{resourceId}}
      operationId: update{{Resource}}
      parameters:
        - name: {{resourceId}}
          in: path
          description: ID of {{resource}} to put
          required: true
          schema:
            type: string
      responses:
        '204':
          description: {{resource}} updated
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
      requestBody:
        x-name: {{resource}}
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/{{resource}}'
        description: {{Resource}} to be updated
        required: true
components:
  schemas:
    errorModel:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    {{Resource}}:
      type: object
      properties:
      {{#data}}
        {{key}}:
          type: {{type}}
          minLength: 1
          example: {{value}}
        {{/data}}
